---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { buttonVariants } from "@/components/ui/button";
import { Image } from "astro:assets";

const postsPerPage = 6;
const allPosts = await getCollection("posts");

const sortedPosts = allPosts.sort((a, b) => +(new Date(b.data.pubDate)) - +(new Date(a.data.pubDate)));

const pageParam = Astro.url.searchParams.get("page");
const currentPage = pageParam && !isNaN(parseInt(pageParam)) ? parseInt(pageParam, 10) : 1;

const totalPosts = sortedPosts.length;
const totalPages = Math.ceil(totalPosts / postsPerPage);
const start = (currentPage - 1) * postsPerPage;
const end = start + postsPerPage;
const paginatedPosts = sortedPosts.slice(start, end);
---

<BaseLayout
  seo={{
    title: "Blog | Benjamin Tannheimer",
    description: "Thoughts, stories, and ideas on web development, software, and more.",
    image: "og-image.png",
  }}
>
  <section class="container mx-auto px-4 py-12">
    <div class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-4">Blog Posts</h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        Explore my latest thoughts on web development, software engineering, and technology trends.
      </p>
    </div>

    <!-- Blog Post Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {paginatedPosts.map((post) => (
        <a href={`/blog/${post.id}`} class="border rounded-lg overflow-hidden shadow-md hover:shadow-lg transition duration-300 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition duration-300 flex flex-col h-full">
          <Image
            src={post.data.image.url}
            alt={post.data.image.alt}
            width={400}
            height={225}
            class="w-full h-48 object-cover"
          />
          <div class="p-6 flex flex-col flex-grow">
            <h2 class="text-xl font-bold mb-2 line-clamp-2">{post.data.title}</h2>
            <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
              {new Date(post.data.pubDate).toLocaleDateString("de-DE", { year: 'numeric', month: 'long', day: 'numeric' })}
            </p>
            <p class="text-gray-600 dark:text-gray-300 mb-4 flex-grow line-clamp-3">{post.data.description}</p>
            <button class={buttonVariants({ variant: 'default' }) + " mt-auto"}>Read More</button>
          </div>
        </a>
      ))}
    </div>

    <!-- Pagination -->
    <div class="flex justify-center mt-12 space-x-4">
      {currentPage > 1 && (
        <a href={`/blog?page=${currentPage - 1}`} class={buttonVariants({ variant: 'outline' })}>
          Previous
        </a>
      )}
      {currentPage < totalPages && (
        <a href={`/blog?page=${currentPage + 1}`} class={buttonVariants({ variant: 'outline' })}>
          Next
        </a>
      )}
    </div>
  </section>
</BaseLayout>
